{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haldes2\\\\Desktop\\\\Practice\\\\Udemy\\\\ReactJS\\\\http\\\\get\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState('');\n  const [isLoading, setIsloading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchMovies = () => {\n    console.log(\"fetching movies...\");\n    setIsloading(true);\n    fetch('https://aswapi.dev/api/films/').then(response => {\n      console.log('Response received: ', response.status);\n\n      if (response.status != 200) {\n        setError(error);\n        throw new Error('Error found');\n      }\n\n      return response.json();\n    }).then(responsejson => {\n      const movieList = responsejson.results.map(movie => {\n        return {\n          id: movie.episode_id,\n          title: movie.title,\n          openingtext: movie.opening_crawl,\n          releaseDate: movie.release_date\n        };\n      });\n      setIsloading(false);\n      setMovies(movieList);\n      console.log('movieList', movieList);\n    }).catch(error => {\n      console.log('error:', error);\n      setError(error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMovies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, !isLoading && movies.length != 0 && error == null && /*#__PURE__*/React.createElement(MoviesList, {\n    moviess: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 57\n    }\n  }), isLoading && error == null && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 37\n    }\n  }, \"Loading...\"), !isLoading && movies.length === 0 && error == null && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 59\n    }\n  }, \"No Movies...\"), error != null && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 23\n    }\n  }, \"Error: \", error)));\n}\n\nexport default App; //","map":{"version":3,"sources":["C:/Users/haldes2/Desktop/Practice/Udemy/ReactJS/http/get/src/App.js"],"names":["React","useState","MoviesList","App","movies","setMovies","isLoading","setIsloading","error","setError","fetchMovies","console","log","fetch","then","response","status","Error","json","responsejson","movieList","results","map","movie","id","episode_id","title","openingtext","opening_crawl","releaseDate","release_date","catch","length"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACZ,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBJ,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACK,SAAD,EAAWC,YAAX,IAA2BN,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM,CAACO,KAAD,EAAOC,QAAP,IAAmBR,QAAQ,CAAC,IAAD,CAAjC;;AACD,QAAMS,WAAW,GAAG,MAAM;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAM,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAI;AAClBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCG,QAAQ,CAACC,MAA3C;;AACA,UAAGD,QAAQ,CAACC,MAAT,IAAiB,GAApB,EAAwB;AACtBP,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACA,cAAM,IAAIS,KAAJ,CAAU,aAAV,CAAN;AACD;;AACD,aAAOF,QAAQ,CAACG,IAAT,EAAP;AACC,KARD,EASCJ,IATD,CASMK,YAAY,IAAI;AAClB,YAAMC,SAAS,GAAGD,YAAY,CAACE,OAAb,CAAqBC,GAArB,CAAyBC,KAAK,IAAI;AAClD,eAAO;AACLC,UAAAA,EAAE,EAAED,KAAK,CAACE,UADL;AAELC,UAAAA,KAAK,EAAEH,KAAK,CAACG,KAFR;AAGLC,UAAAA,WAAW,EAAEJ,KAAK,CAACK,aAHd;AAILC,UAAAA,WAAW,EAAEN,KAAK,CAACO;AAJd,SAAP;AAMD,OAPiB,CAAlB;AAQAvB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,MAAAA,SAAS,CAACe,SAAD,CAAT;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBQ,SAAxB;AACH,KArBD,EAsBCW,KAtBD,CAsBOvB,KAAK,IAAI;AACdG,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBJ,KAArB;AACAC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAzBD;AA0BH,GA7BD;;AA+BA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,CAACJ,SAAD,IAAcF,MAAM,CAAC4B,MAAP,IAAe,CAA7B,IAAkCxB,KAAK,IAAE,IAAzC,iBAAiD,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEJ,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADlD,EAECE,SAAS,IAAIE,KAAK,IAAE,IAApB,iBAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAF9B,EAGC,CAACF,SAAD,IAAcF,MAAM,CAAC4B,MAAP,KAAgB,CAA9B,IAAoCxB,KAAK,IAAE,IAA3C,iBAAmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHpD,EAICA,KAAK,IAAE,IAAP,iBAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWA,KAAX,CAJhB,CAJF,CADF;AAaD;;AAED,eAAeL,GAAf,C,CACA","sourcesContent":["import React,{useState} from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n   const [movies,setMovies] = useState('');\n   const [isLoading,setIsloading] = useState(false);\n   const [error,setError] = useState(null);\n  const fetchMovies = () => {\n      console.log(\"fetching movies...\");\n      setIsloading(true);\n      fetch('https://aswapi.dev/api/films/')\n      .then(response => {\n      console.log('Response received: ',response.status)\n      if(response.status!=200){\n        setError(error);\n        throw new Error('Error found');\n      }\n      return response.json();\n      })\n      .then(responsejson => {\n          const movieList = responsejson.results.map(movie => {\n            return {\n              id: movie.episode_id,\n              title: movie.title,\n              openingtext: movie.opening_crawl,\n              releaseDate: movie.release_date\n            }\n          });\n          setIsloading(false);\n          setMovies(movieList);\n          console.log('movieList',movieList);\n      })\n      .catch(error => {\n        console.log('error:',error)\n        setError(error);\n      });\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMovies}>Fetch Movies</button>\n      </section>\n      <section>\n      {!isLoading && movies.length!=0 && error==null && <MoviesList moviess={movies} />}\n      {isLoading && error==null &&  <p>Loading...</p>}\n      {!isLoading && movies.length===0  && error==null && <p>No Movies...</p>}\n      {error!=null && <p>Error: {error}</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n// "]},"metadata":{},"sourceType":"module"}